@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
    .btnPressLike:active {
        transform: scale(0.9);
    }
}

/* CUSTOM CSS COME HERE */

button:active {
    transform: scale(0.9);
}

html,
body {
    padding: 0;
    margin: 0;
    font-family: 'Open Sans', sans-serif;
}
a {
    color: inherit;
    text-decoration: none;
}

* {
    box-sizing: border-box;
}

input:focus-visible,
textarea:focus-visible {
    outline: none !important;
}

/* Hamburger Menu */

/* We will apply the "open" class through React */
.hamburger {
    cursor: pointer;
    width: 24px;
    height: 15px;
    transition: all 0.25s;
    position: relative;
}

.hamburger-top,
.hamburger-middle,
.hamburger-bottom {
    position: absolute;
    top: 0;
    left: 0;
    width: 24px;
    height: 2px;
    background: white;
    transform: rotate(0);
    transition: all 0.5s;
}

.hamburger-middle {
    transform: translateY(7px);
}

.hamburger-bottom {
    transform: translateY(14px);
}

/* This class will be added through JS */
.open {
    transform: rotate(90deg) translateY(0px);
}

.open .hamburger-top {
    transform: rotate(45deg) translateY(6px) translate(6px);
}

/* We need only two bars to make a cross */
.open .hamburger-middle {
    display: none;
}

.open .hamburger-bottom {
    transform: rotate(-45deg) translateY(6px) translate(-6px);
}

/* Essai user menu */
.dropdown {
    position: relative;
    display: inline-block;
}

.menuStyle ul li a {
    padding: 10px 12px;
    text-decoration: none;
    display: block;
}

.menuStyle ul li a:hover {
    background-color: #f7f7f7;
}

/* When editable input is hovered, underline lable */
.inputElem:hover .spotEditorElems {
    text-decoration: underline !important;
}

.spotEditorElems:hover .inputElem {
    background-color: #f7f5f5 !important;
}

/* Remove mapbox logo */
.mapboxgl-ctrl-bottom-left {
    display: none !important;
}

.iconToAnimate {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 350ms;
}

/* On buttonWrapper hover, apply the below to iconToAnimate  */
.buttonWrapper:hover .iconToAnimate {
    transform: translateY(-25%);
}

.upload-widget-popup {
    backdrop-filter: blur(5px) !important;
}

.footer.bg-window {
    display: none !important;
}

.cursorNotAllowedAsterix * {
    cursor: not-allowed !important;
}

.shadowPF {
    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.05), 0 4px 8px rgba(0, 0, 0, 0.15);
}

.transition-modal {
    animation-name: modalTransition;
    animation-duration: 0.2s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-out;
}

@keyframes modalTransition {
    from {
        opacity: 20%;
        transform: translateY(30%);
    }
    to {
        opacity: 100%;
        transform: translateY(0%);
    }
}

.overlay {
    position: fixed;
    z-index: 999;
    width: 100vw;
    height: 100vh;

    animation-name: overlayTransition;
    animation-duration: 0.2s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-out;
}

@keyframes overlayTransition {
    from {
        background-color: rgba(49, 49, 49, 0);
    }
    to {
        background-color: rgba(49, 49, 49, 0.8);
    }
}
