@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
    .btnPressLike:active {
        transform: scale(0.9);
    }
}

/* CUSTOM CSS COME HERE */

button:active {
    transform: scale(0.9);
}

.disabled\:active\:transform-none:active:disabled {
    transform: none;
}

html {
    scroll-behavior: smooth;
}

html,
body {
    padding: 0;
    margin: 0;
    font-family: 'Open Sans', sans-serif;
}
a {
    color: inherit;
    text-decoration: none;
}

* {
    box-sizing: border-box;
}

input:focus-visible,
textarea:focus-visible {
    outline: none !important;
}

/* Hamburger Menu */

/* We will apply the "open" class through React */
.hamburger {
    cursor: pointer;
    width: 24px;
    height: 15px;
    transition: all 0.25s;
    position: relative;
}

.hamburger-top,
.hamburger-middle,
.hamburger-bottom {
    position: absolute;
    top: 0;
    left: 0;
    width: 24px;
    height: 2px;
    background: #3b97ba;
    transform: rotate(0);
    transition: all 0.5s;
}

.hamburger-middle {
    transform: translateY(7px);
}

.hamburger-bottom {
    transform: translateY(14px);
}

/* This class will be added through JS */
.open {
    transform: rotate(90deg) translateY(0px);
}

.open .hamburger-top {
    transform: rotate(45deg) translateY(6px) translate(6px);
}

/* We need only two bars to make a cross */
.open .hamburger-middle {
    display: none;
}

.open .hamburger-bottom {
    transform: rotate(-45deg) translateY(6px) translate(-6px);
}

/* Essai user menu */
.dropdown {
    position: relative;
    display: inline-block;
}

.menuStyle ul li a {
    padding: 10px 12px;
    text-decoration: none;
    display: block;
}

.menuStyle ul li a:hover {
    background-color: #f7f7f7;
}

/* When editable input is hovered, underline lable */
.inputElem:hover .spotEditorElems {
    text-decoration: underline !important;
}

.spotEditorElems:hover .inputElem {
    background-color: #f7f5f5 !important;
}

/* Remove mapbox logo */
.mapboxgl-ctrl-bottom-left {
    display: none !important;
}

.iconToAnimate {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 350ms;
}

/* On buttonWrapper hover, apply the below to iconToAnimate  */
.buttonWrapper:hover .iconToAnimate {
    transform: translateY(-25%);
}

.footer.bg-window {
    display: none !important;
}

.cursorNotAllowedAsterix * {
    cursor: not-allowed !important;
}

.shadowPF {
    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.05), 0 4px 8px rgba(0, 0, 0, 0.15);
}

/* Animate from display none */
.transition-modal {
    animation-name: modalTransition;
    animation-duration: 0.2s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-out;
}

@keyframes modalTransition {
    from {
        opacity: 20%;
        transform: translateY(30%);
    }
    to {
        opacity: 100%;
        transform: translateY(0%);
    }
}

/* Modal */
.overlay {
    position: fixed;
    z-index: 1000;
    width: 100vw;
    height: 100vh;

    animation-name: overlayTransition;
    animation-duration: 0.2s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-out;
}

@keyframes overlayTransition {
    from {
        background-color: rgba(49, 49, 49, 0);
    }
    to {
        background-color: rgba(49, 49, 49, 0.8);
    }
}

.shadow-user-menu-hov:hover {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.18);
}

.shadow-user-menu {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.18);
}

.transparent-navbar {
    background-color: hsla(0, 0%, 100%, 0.8);
    backdrop-filter: saturate(180%) blur(4px);
}

/* Animate from display none */
.transition-user-menu {
    animation-name: userMenuTransition;
    animation-duration: 0.1s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-out;
}

@keyframes userMenuTransition {
    from {
        opacity: 10%;
        transform: scale(70%);
    }
    to {
        opacity: 100%;
        transform: scale(100%);
    }
}

.transition-filters {
    animation-name: filtersTransition;
    animation-duration: 0.5s;
    animation-timing-function: ease-in;
}

@keyframes filtersTransition {
    from {
        opacity: 0%;
    }
    to {
        opacity: 100%;
    }
}

.center {
    position: fixed;
    left: 50%;
    bottom: 5%;
}

/* Avoid IOS changing opacity of disabled inputs */
textarea:disabled,
input:disabled {
    color: #000 !important;
    background: none !important;
    opacity: 1 !important;
}

/* Vertical carrousel */
.carrouselWrapper {
    overflow: hidden;
    height: 95vh;
    white-space: nowrap;
    position: relative;
}

.spots-slide {
    animation: animate-vertical-carrousel 17s linear infinite;
    animation-delay: 0.5s;
}

@keyframes animate-vertical-carrousel {
    from {
        transform: translateY(0%);
    }
    to {
        transform: translateY(-100%);
    }
}

.carrouselWrapper:hover .spots-slide {
    animation-play-state: paused;
}

/* Gradient */
.carrouselWrapper:before {
    position: absolute;
    top: 0;
    left: 0;
    height: 100px;
    width: 100%;
    background: linear-gradient(to top, rgba(255, 255, 255, 0), #f7f5f5);
    content: '';
    z-index: 2;
}

@media (min-width: 768px) {
    .carrouselWrapperBottom::after {
        position: absolute;
        bottom: 100%;
        left: 0;
        height: 100px;
        width: 100%;
        background: linear-gradient(to bottom, rgba(255, 255, 255, 0), white);
        content: '';
        z-index: 999;
    }
}

/* To space spots cards */
.spots-slide a {
    margin-bottom: 25px;
}

/* Btn landing page animation */
.animateElemsBtn {
    transition: width 320ms, opacity 630ms, transform 405ms;
    transition-timing-function: ease-out;
}

.svgCenter svg {
    margin: 0 auto;
}

/* Underline spreads on hover navbar */
li.hoverUnderline:after {
    transition: 0.25s ease-out;

    border-bottom: 3px solid #ef5e4e;
    transform: scaleX(0);

    display: block;
    content: '';
}

li.hoverUnderline:hover:after {
    transform: scaleX(1);
}

/* Active link style */
.isActiveNavLink {
    font-weight: 600;
    color: #ef5e4e;
}

li.isActiveNavLink:after {
    transform: scaleX(1);
}

/* Input Plceholder color newsletter footer */
input.newsLetter::placeholder {
    color: white;
}

/* Hover effect link footer */
div.hoverLink a {
    text-decoration-color: transparent;
    text-decoration-line: underline;
    text-underline-offset: 8px;
    transition: text-decoration-color 0.1s ease;
    text-decoration-thickness: 2px;
}

div.hoverLink a:hover {
    text-decoration-color: #ef5e4e;
    text-decoration-line: underline;
    text-underline-offset: 8px;
    text-decoration-thickness: 2px;
}

/* Type writing effect */

/* Two classes : one to make the cursor blink for pausing phrase and one blinking for typing & deleting */
.blinkingCursorDynamic::after {
    content: '|';
}

.blinkingCursorPause::after {
    content: '|';
    animation: blink 1s step-start infinite;
}

@keyframes blink {
    50% {
        opacity: 0;
    }
}

.hoverCardShadow:hover {
    box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 4px rgba(0, 0, 0, 0.2);
    border: none;
    transition: box-shadow 83ms;
    border-radius: 0.8rem;
}

@media (min-width: 768px) {
    .verticalBarStats:before {
        position: absolute;
        left: 0;
        height: 100%;
        width: 4px;
        border-radius: 2px;
        top: 5%;
    }
}

/* Align stats on landing page */
.alignStats {
    width: calc(50% - 1.5rem / 2);
}

/* Display ellipsis suspension on multi-lines text */
.ellipsis-multi-lines {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3; /* start showing ellipsis when 3rd line is reached */
    white-space: pre-wrap; /* let the text wrap preserving spaces */
}

.bounceTimingFunction {
    transition-timing-function: cubic-bezier(0.42, 1.44, 0.39, 0.87);
}

.transition-image-viewer {
    animation-name: transImgView;
    animation-duration: 0.2s;
    animation-timing-function: ease-in-out;
}

@keyframes transImgView {
    from {
        opacity: 70%;
    }
    to {
        opacity: 100%;
    }
}

.transition-bottom-up {
    animation-name: transImgViewBottomUp;
    animation-duration: 0.3s;
    animation-timing-function: ease-out;
}

@keyframes transImgViewBottomUp {
    from {
        opacity: 15%;
        transform: translateY(80%);
    }
    to {
        opacity: 100%;
        transform: translateY(0%);
    }
}

.dimOnHover {
    transition: filter 0.2s ease-out;
    cursor: pointer;
}

.dimOnHover:hover {
    filter: brightness(87%);
}
